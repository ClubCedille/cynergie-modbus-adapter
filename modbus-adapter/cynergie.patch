From f66ec4cb86e346e177b6b7947c7fff7c2bbf8001 Mon Sep 17 00:00:00 2001
From: Gautier Colajanni <gautier.colajanni@gmail.com>
Date: Wed, 29 Nov 2017 20:23:00 -0500
Subject: [PATCH] Cynergie WIP

---
 _config.json | 21 +++++++++++++++++++++
 package.json |  2 ++
 src/index.ts | 37 +++++++++++--------------------------
 3 files changed, 34 insertions(+), 26 deletions(-)
 create mode 100644 _config.json

diff --git a/_config.json b/_config.json
new file mode 100644
index 0000000..c2e8ee9
--- /dev/null
+++ b/_config.json
@@ -0,0 +1,21 @@
+{
+	"inMemoryDB": false,
+	"interventionTime": "30 0 * * *",
+	"readFrequency": {
+		"interval": 60000,
+		"requiredOccurences": 5,
+		"scheduled": false
+	},
+	"controllers": [
+		{
+			"name": "DEMO",
+			"address": "127.0.0.1",
+			"port": "502",
+			"slaveId": 1,
+			"registers": [
+				{"label": "Ia", "address": 154, "type": "INT16", "unit": "A", "coefficient": 1.0},
+				{"label": "Ib", "address": 155, "type": "INT16", "unit": "A", "coefficient": 1.0}
+			]
+		}
+	]
+}
diff --git a/package.json b/package.json
index 2b7fe68..bfabe9c 100644
--- a/package.json
+++ b/package.json
@@ -25,6 +25,7 @@
   "author": "Gautier Colajanni",
   "license": "MIT",
   "dependencies": {
+    "express": "^4.16.2",
     "http-server": "^0.10.0",
     "modbus-serial": "^5.2.9",
     "node-schedule": "^1.2.1",
@@ -33,6 +34,7 @@
   },
   "devDependencies": {
     "@types/chai": "^4.0.0",
+    "@types/express": "^4.0.39",
     "@types/mocha": "^2.2.41",
     "@types/node": "^7.0.18",
     "chai": "^4.0.2",
diff --git a/src/index.ts b/src/index.ts
index 32606c0..f27d36f 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -6,11 +6,9 @@ import { ExtractHelper } from './helpers/ExtractHelper';
 import { CsvHelper } from './helpers/CsvHelper';
 import { FakeProvider } from './providers/FakeProvider';
 import { ModBusProvider } from './providers/ModBusProvider';
-import { Storage } from './database/Storage';
 
 const config = require('../config.json') as Configuration;
 const controllers = createControllers(config.controllers);
-const storage = new Storage(config.inMemoryDB);
 
 const args = process.argv.slice(2);
 const debugMode = args.length === 1;
@@ -20,28 +18,6 @@ if (debugMode) {
 
 console.log(`Service started (frq: ${config.readFrequency.interval}ms, occ: ${config.readFrequency.requiredOccurences})!`);
 
-
-// Define operation that should be executed every day
-const dailyOperation = () => {
-	const currentDate = new Date();
-
-	ExtractHelper.yesterday(storage);
-
-	if (debugMode || currentDate.getDate() === 1) {
-		ExtractHelper.lastMonth(storage);
-	}
-
-	if (debugMode || currentDate.getDate() === 10) {
-		CsvHelper.cleanLastMonthFiles();
-	}
-
-	storage.cleanOldData(62);
-};
-
-// Execute every day at 00:30
-schedule.scheduleJob(config.interventionTime, dailyOperation);
-debugMode && dailyOperation();
-
 // Declare the functions used to retrieve data from each controllers
 const ChosenProvider = debugMode ? FakeProvider : ModBusProvider;
 const controllerFetching = controllers.map(c => {
@@ -84,8 +60,8 @@ const fetchFunction = () => {
 				buffer[index] = [dataset, ...buffer[index]];
 				if (buffer[index].length % config.readFrequency.requiredOccurences === 0) {
 					const summarizedData = DatasetHelper.summarize(buffer[index]);
-					storage.save(summarizedData);
-					storage.close();
+
+					// Previously storage
 
 					buffer[index] = [];
 				}
@@ -102,3 +78,12 @@ else {
 	fetchFunction();
 	setInterval(fetchFunction, config.readFrequency.interval);
 }
+
+var express = require('express')
+var app = express()
+
+app.get('/', function (req, res) {
+	  res.send(JSON.stringify(buffer));
+})
+
+app.listen(3000)
-- 
2.7.4

